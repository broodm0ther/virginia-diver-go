package routes

import (
	"fmt"
	"os"
	"path/filepath"

	"kostya/database"

	"github.com/gofiber/fiber/v2"
)

func UpdateProfile(c *fiber.Ctx) error {
	fmt.Println("üì• –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è")

	form, err := c.MultipartForm()
	if err != nil {
		return c.Status(400).JSON(fiber.Map{"error": "–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Ñ–æ—Ä–º—ã"})
	}

	username := form.Value["username"][0]
	region := form.Value["region"][0]
	bio := form.Value["bio"][0]

	var avatarPath string
	files := form.File["avatar"]
	if len(files) > 0 {
		file := files[0]
		fmt.Println("üì∏ –§–∞–π–ª –ø–æ–ª—É—á–µ–Ω:", file.Filename)

		os.MkdirAll("./uploads", os.ModePerm)
		avatarPath = "/uploads/" + file.Filename
		filePath := filepath.Join("./uploads", file.Filename)

		err = c.SaveFile(file, filePath)
		if err != nil {
			return c.Status(500).JSON(fiber.Map{"error": "–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞"})
		}
		fmt.Println("‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω:", filePath)
	}

	// üî• –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	userID := c.Locals("user_id").(int) // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ middleware
	query := "UPDATE users SET username=?, region=?, bio=?, avatar=? WHERE id=?"
	err = database.DB.Exec(query, username, region, bio, avatarPath, userID).Error
	if err != nil {
		return c.Status(500).JSON(fiber.Map{"error": "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è"})
	}

	fmt.Println("‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω—ã –≤ –ë–î")
	return c.JSON(fiber.Map{"message": "–ü—Ä–æ—Ñ–∏–ª—å –æ–±–Ω–æ–≤–ª—ë–Ω", "avatar": avatarPath})
}
