package main

import (
	"log"

	"github.com/gofiber/fiber/v2"
	"github.com/joho/godotenv"

	"kostya/database"
	"kostya/routes"
)

func main() {
	// üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
	if err := godotenv.Load(); err != nil {
		log.Println("‚ö†Ô∏è .env –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω")
	}

	// üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
	database.ConnectDatabase()

	app := fiber.New()

	// üñº –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
	app.Static("/uploads/", "./uploads")

	// üì¶ –ì—Ä—É–ø–ø–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ –∞–∫–∫–∞—É–Ω—Ç–∞
	authGroup := app.Group("/api/auth")
	authGroup.Post("/login", routes.LoginUser)
	authGroup.Post("/register", routes.RegisterUser)
	authGroup.Post("/verify-email", routes.VerifyEmail)
	authGroup.Post("/forgot-password", routes.ForgotPassword)
	authGroup.Post("/reset-password", routes.ResetPassword)
	authGroup.Get("/profile", routes.AuthMiddleware(), routes.GetProfile)
	authGroup.Post("/update-profile", routes.AuthMiddleware(), routes.UpdateProfile)
	authGroup.Post("/logout", routes.LogoutUser)
	authGroup.Post("/set-role", routes.AuthMiddleware(), routes.SetUserRole)
	authGroup.Get("/all-users", routes.AuthMiddleware(), routes.GetAllUsers)

	// üì¶ –ì—Ä—É–ø–ø–∞ —Ç–æ–≤–∞—Ä–æ–≤
	productGroup := app.Group("/api/products", routes.AuthMiddleware())
	productGroup.Get("/pending", routes.GetPendingProducts)
	productGroup.Post("/approve/:id", routes.ApproveProduct)
	productGroup.Post("/reject/:id", routes.RejectProduct)

	// ‚úÖ –û–¥–æ–±—Ä–µ–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã ‚Äî –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ–º
	app.Get("/api/products/approved", routes.GetApprovedProducts)

	log.Println("üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8080")
	if err := app.Listen(":8080"); err != nil {
		log.Fatalf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞: %v", err)
	}
}
